{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Resultado.js","components/Resumen.js","helper.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","marcaRef","React","createRef","yearRef","planCompletoRef","planBasicoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","cotizarSeguros","className","onSubmit","this","name","ref","type","Component","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","Resumen","mostrarResumen","texto","_this$props$datos","datos","charAt","toUpperCase","slice","components_Resultado","App","state","console","log","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setState","components_Header","components_Formulario","components_Resumen","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42b8b668.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <h1>\r\n                {props.titulo}\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component {\r\n    //ref, para leer valores de un form\r\n    marcaRef = React.createRef();\r\n    yearRef = React.createRef();\r\n    planCompletoRef = React.createRef();\r\n    planBasicoRef = React.createRef();\r\n    cotizarSeguro = (e) =>{\r\n        e.preventDefault();\r\n        const plan = this.planBasicoRef.current.checked ? 'Basico':'Completo';\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan: plan\r\n        }\r\n        this.props.cotizarSeguros(infoAuto);\r\n        //e.currentTarget.reset();//Reiniciar Formulario\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef} >\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" ref={this.planBasicoRef} name=\"plan\" value=\"basico\"/> Básico\r\n                    <input type=\"radio\" ref={this.planCompletoRef} name=\"plan\" value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Formulario;","import React,{Component} from 'react';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group' \r\n\r\nclass Resultado extends Component{\r\n    render(){\r\n        const resultado =this.props.resultado;\r\n        const mensaje = (!resultado) ?\"Elije\":resultado;\r\n        return(\r\n\r\n            <div className=\"gran-total\">\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n                    <CSSTransition \r\n                    classNames=\"resultado\" \r\n                    key={resultado}\r\n                    timeout={{enter:500,exit:500 }}\r\n                    >\r\n                        <span>{mensaje}</span>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React,{Component} from 'react';\r\nimport {primeraMayuscula} from '../helper';\r\nimport Resultado from './Resultado';\r\n\r\nclass Resumen extends Component {\r\n    \r\n    mostrarResumen = () =>{\r\n        const {marca, year, plan} = this.props.datos;\r\n        if(!marca) return null;\r\n        return (\r\n            <div className=\"resumen\">\r\n                <h2>Resumen de Cotizacion</h2>\r\n                <li>Marca Seleccionada: {primeraMayuscula(marca)}</li>\r\n                <li>Plan Seleccionado: {plan}</li>\r\n                <li>Año Seleccionado: {year}</li>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                {this.mostrarResumen()}\r\n                <Resultado\r\n                    resultado={this.props.resultado}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Resumen;","\r\nexport function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport Resumen from './Resumen';\r\nimport {obtenerDiferenciaAnio} from '../helper';\r\nimport {calcularMarca,obtenerPlan} from '../helper';\r\nimport Resultado from './Resultado';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    resultado: '',\r\n    datos:{}\r\n  }\r\n  cotizarSeguros = (infoAuto) =>{\r\n    console.log(infoAuto);\r\n    //destructuring\r\n    const {marca, plan, year} = infoAuto;\r\n    \r\n    let resultado = 2000;\r\n    const diferencia = obtenerDiferenciaAnio(year);\r\n    resultado -= ((diferencia * 3) * resultado)/ 100;\r\n    resultado  = calcularMarca(marca)*resultado;\r\n    let incrementoPlan = obtenerPlan(plan);\r\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n    this.setState({\r\n      resultado: resultado,\r\n      datos:infoAuto\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contenedor\">\r\n        <Header\r\n          titulo=\"Cotizador de seguros\"\r\n        />\r\n        <div className=\"contenedor-formulario\">\r\n          <Formulario\r\n            cotizarSeguros={this.cotizarSeguros}\r\n          />\r\n          <Resumen\r\n            datos={this.state.datos}\r\n            resultado={this.state.resultado}\r\n          />\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}